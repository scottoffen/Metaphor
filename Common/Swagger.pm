package Common::Swagger;
our $VERSION = '1.0.0.0';

#########################################||#########################################
#                                                                                  #
# Common::Swagger                                                                  #
# Â© Copyright 2011-2014 Scott Offen (http://www.scottoffen.com)                    #
#                                                                                  #
#########################################||#########################################


#----------------------------------------------------------------------------------#
# Pragmas and modules to use                                                       #
#----------------------------------------------------------------------------------#
	use strict;
	use warnings;
	use Common::Config;
	use Common::Logging;
	use Common::Storage qw(GetFileName);
	use JSON::PP;
	use base 'Exporter';
#----------------------------------------------------------------------------------#


#----------------------------------------------------------------------------------#
# Module Initialization                                                            #
#----------------------------------------------------------------------------------#
BEGIN
{
	#----------------------------------------------------------------------------------#
	# Set default environment variables and untaint them all                           #
	#----------------------------------------------------------------------------------#
	$ENV{REQUEST_METHOD} = 'GET' unless defined $ENV{REQUEST_METHOD};
	$ENV{HTTP_HOST}      = 'localhost' unless defined $ENV{HTTP_HOST};
	$ENV{REQUEST_URI}    = '' unless defined $ENV{REQUEST_URI};
	#----------------------------------------------------------------------------------#
}
#----------------------------------------------------------------------------------#


#----------------------------------------------------------------------------------#
# Global Variables                                                                 #
#----------------------------------------------------------------------------------#
	our @EXPORT = qw(SetApi SetModel $API);
	our $STATE  = 0;

	our ($API_VERSION, $SWAGGER_VERSION);
	{
		my $config = (exists GetConfig()->{'swagger'}) ? GetConfig()->{'swagger'} : undef;
		if ($config)
		{
			$API_VERSION     = (exists $config->{'api-version'}) ? $config->{'api-version'} : '1.0.0';
			$SWAGGER_VERSION = (exists $config->{'version'}) ? $config->{'version'} : '1.2';
		}
	}
#----------------------------------------------------------------------------------#


#----------------------------------------------------------------------------------#
# Swagger API                                                                      #
#----------------------------------------------------------------------------------#
our $API =
{
	"apiVersion"     => $API_VERSION,
	"swaggerVersion" => $SWAGGER_VERSION,
	"basePath"       => "http://$ENV{HTTP_HOST}$ENV{REQUEST_URI}",
	"resourcePath"   => "/" . GetFileName($ENV{REQUEST_URI}),
	"apis"           => [],
	"models"         => {},
	# "produces"       =>
	# [
		# 'application/json',
		# 'application/xml',
		# 'text/plain',
		# 'text/yaml'
	# ],
	# "consumes"       =>
	# [
		# 'application/json',
		# 'application/xml',
		# 'text/plain',
		# 'text/yaml'
	# ]
};
#----------------------------------------------------------------------------------#


#################################|     GetAPI     |#################################
# Public Static                                                                    #
#----------------------------------------------------------------------------------#
sub GetAPI
{
	return $API;
}
#########################################||#########################################



#################################|     Enable     |#################################
# Public Static                                                                    #
#----------------------------------------------------------------------------------#
sub Enable
{
	$STATE = 1;
}
#########################################||#########################################



################################|     IsEnabled     |###############################
# Public Static                                                                    #
#----------------------------------------------------------------------------------#
sub IsEnabled
{
	return $STATE;
}
#########################################||#########################################



#################################|     Config     |#################################
# Public Static                                                                    #
#----------------------------------------------------------------------------------#
sub Config
{
	my $class = shift;
	my $params = ((scalar @_ > 0) && (ref $_[0] eq 'HASH')) ? shift : {};

	foreach my $key (keys %$params)
	{
		$API->{$key} = $params->{$key};
	}
}
#########################################||#########################################



#################################|     SetApi     |#################################
# Exported                                                                         #
#----------------------------------------------------------------------------------#
sub SetApi
{
	# my $api = ((scalar @_ > 0) && (ref $_[0] eq 'HASH')) ? shift : undef;
	# if ($api)
	# {
	# 	foreach my $key (keys %$api)
	# 	{
	# 		if ($key =~ /^(apis|models)$/i)
	# 		{
	# 			if (((lc($key) eq 'apis') && (ref $api->{$key} eq 'ARRAY')) || ((lc($key) eq 'models') && (ref $api->{$key} eq 'HASH')))
	# 			{
	# 				$apidocs->{$key} = $api->{$key};
	# 			}
	# 		}
	# 		else
	# 		{
	# 			$apidocs->{$key} = $api->{$key};
	# 		}
	# 	}
	# }
}
#########################################||#########################################



################################|     SetModel     |################################
# Exported                                                                         #
# 0 : Object (hashref)
#----------------------------------------------------------------------------------#
sub SetModel
{

}
#########################################||#########################################





























#########################################||#########################################
#                                                                                  #
# Common::Swagger::API                                                             #
#                                                                                  #
#########################################||#########################################
{
	package Common::Swagger::API;
	our $VERSION = '1.0.0.0';


	#----------------------------------------------------------------------------------#
	# Pragmas and modules to use                                                       #
	#----------------------------------------------------------------------------------#
		use strict;
		use warnings;
		use Common::Logging;
	#----------------------------------------------------------------------------------#


	##################################|     new     |###################################
	sub new
	{

	}
	#########################################||#########################################



	################################|     toString     |################################
	sub toString
	{

	}
	#########################################||#########################################
}
#########################################||#########################################






































#########################################||#########################################
#                                                                                  #
# Common::Swagger::Model                                                           #
#                                                                                  #
#########################################||#########################################
{
	package Common::Swagger::Model;
	our $VERSION = '1.0.0.0';


}
#########################################||#########################################



#########################################||#########################################
#                                                                                  #
# Common::Swagger::Operation                                                       #
#                                                                                  #
#########################################||#########################################
{
	package Common::Swagger::Operation;
	our $VERSION = '1.0.0.0';


}
#########################################||#########################################



#########################################||#########################################
#                                                                                  #
# Common::Swagger::Datatype                                                        #
#                                                                                  #
#########################################||#########################################
{
	package Common::Swagger::Datatype;
	our $VERSION = '1.0.0.0';


}
#########################################||#########################################



#########################################||#########################################
#                                                                                  #
# Common::Swagger::Parameters                                                      #
#                                                                                  #
#########################################||#########################################
{
	package Common::Swagger::Parameters;
	our $VERSION = '1.0.0.0';


}
#########################################||#########################################



1;