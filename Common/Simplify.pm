package Common::Simplify;
our $VERSION = '0.9';

#########################################||#########################################
#                                                                                  #
# Common::Simplify                                                                 #
# Â© Copyright 2011-2014 Scott Offen (http://www.scottoffen.com)                    #
#                                                                                  #
#########################################||#########################################


#----------------------------------------------------------------------------------#
# Pragmas and modules to use                                                       #
#----------------------------------------------------------------------------------#
	use strict;
	use warnings;
	use Scalar::Util 'blessed';
	use base 'Exporter';
#----------------------------------------------------------------------------------#


#----------------------------------------------------------------------------------#
# Global Variables                                                                 #
#----------------------------------------------------------------------------------#
	our @EXPORT = qw(Simplify);
#----------------------------------------------------------------------------------#


################################|     Simplify     |################################
# Exported                                                                         #
#----------------------------------------------------------------------------------#
sub Simplify
{
	my $self = shift;
	my $data = {};
	my @link = ((@_) && (scalar @_ > 0)) ? @_ : ();


	#----------------------------------------------------------------------------------#
	# Object data elements are pulled from the internal fields structure               #
	#----------------------------------------------------------------------------------#
	if (exists $self->{Fields})
	{
		if (ref $self->{Fields} eq 'HASH')
		{
			push (@link, $_) foreach (keys %{$self->{Fields}});
		}
		elsif (ref $self->{Fields} eq 'ARRAY')
		{
			push (@link, $_) foreach (@{$self->{Fields}});
		}
	}
	#----------------------------------------------------------------------------------#


	#----------------------------------------------------------------------------------#
	# Add object properties to the data structure                                      #
	#----------------------------------------------------------------------------------#
	foreach my $key (@link)
	{
		#----------------------------------------------------------------------------------#
		# Special handeling for boolean values, as defined as any field that begins with   #
		# the letters 'Is' immediatly followed by a capital letter.                        #
		#----------------------------------------------------------------------------------#
		if ($key =~ /^Is[A-Z]\w+/)
		{
			$data->{$key} = ((defined $self->{$key}) && ($self->{$key} eq '1')) ? 'true' : 'false';
		}
		#----------------------------------------------------------------------------------#


		#----------------------------------------------------------------------------------#
		# Everything else                                                                  #
		#----------------------------------------------------------------------------------#
		else
		{
			$data->{$key} = '';

			#----------------------------------------------------------------------------------#
			# If the key is also a method, run the method before checking for a value.         #
			#----------------------------------------------------------------------------------#
			if ($self->can($key))
			{
				$self->$key;
			}
			#----------------------------------------------------------------------------------#


			#----------------------------------------------------------------------------------#
			# Only grab values that are defined                                                #
			#----------------------------------------------------------------------------------#
			if (defined $self->{$key})
			{
				#----------------------------------------------------------------------------------#
				# Add references (other Simplify objects, ARRAY and HASH only)                     #
				#----------------------------------------------------------------------------------#
				if (ref $self->{$key})
				{
					my $ref = UNMARSHALL($self->{$key});
					if ($ref)
					{
						$data->{$key} = $ref;
					}
				}
				#----------------------------------------------------------------------------------#


				#----------------------------------------------------------------------------------#
				# Add scalars                                                                      #
				#----------------------------------------------------------------------------------#
				else
				{
					$data->{$key} = $self->{$key};
				}
				#----------------------------------------------------------------------------------#
			}
			#----------------------------------------------------------------------------------#
		}
		#----------------------------------------------------------------------------------#
	}
	#----------------------------------------------------------------------------------#

	return $data;
}
#########################################||#########################################



###############################|     UnMarshall     |###############################
# Private                                                                          #
#----------------------------------------------------------------------------------#
sub UNMARSHALL
{
	my $refed = shift;
	my $deref = undef;

	#----------------------------------------------------------------------------------#
	# HASH                                                                             #
	#----------------------------------------------------------------------------------#
	if (ref $refed eq 'HASH')
	{
		$deref = {};

		foreach my $key (keys %{$refed})
		{
			my $obj = $refed->{$key};

			if (ref $obj)
			{
				$deref->{$key} = UNMARSHALL($obj);
			}
			else
			{
				$deref->{$key} = $obj;
			}
		}
	}
	#----------------------------------------------------------------------------------#


	#----------------------------------------------------------------------------------#
	# ARRAY                                                                            #
	#----------------------------------------------------------------------------------#
	elsif (ref $refed eq 'ARRAY')
	{
		$deref = [];

		foreach my $obj (@{$refed})
		{
			if (ref $obj)
			{
				push(@{$deref}, UNMARSHALL($obj));
			}
			else
			{
				push(@$deref, $obj);
			}
		}
	}
	#----------------------------------------------------------------------------------#


	#----------------------------------------------------------------------------------#
	# Simplify enabled                                                                 #
	#----------------------------------------------------------------------------------#
	elsif ((blessed($refed)) && ($refed->can('Simplify')))
	{
		$deref = $refed->Simplify();
	}
	#----------------------------------------------------------------------------------#

	return $deref;
}
#########################################||#########################################



1;